column_id = "data_mkmc9cq3"
            # First query to get the date
            date_query = f"""
            query {{items (ids: [{item_id}]) {{
                column_values {{(ids: ["{column_id}"])
                    ... on DateValue {{
                        date
                    }}
                }}
            }}}}"""

            response = requests.post(url=API_URL,
                                     json={'query': date_query},
                                     headers=headers)
            date_data = response.json()

            

            # Extract the date value from response
            try:
                date_value = ""
                column_values = date_data['data']['items'][0]['column_values']
                for column in column_values:
                    if 'date' in column:
                        date_value = column['date']
                        break
            except (KeyError, IndexError):
                date_value = ""

            print ("datevalue:", date_data)
            # Convert string date to datetime, add days, then format back to string
            current_date = datetime.strptime(date_value, '%Y-%m-%d')

            offset_days = int(list(subitem_offset)[0]) if subitem_offset else 0
            new_date = (current_date +
                        timedelta(days=offset_days)).strftime('%Y-%m-%d')

            # Second query to update with the extracted
            number_query = f"""
                query {{items (ids: [{subitem_id}]) {{
                    column_values {{
                        ... on NumbersValue {{
                            number
                              }}
                          }}
                      }}}}"""

            response = requests.post(url=API_URL,
                                     json={'query': number_query},
                                     headers=headers)
            number_data = response.json()

            try:
                number_value = ""
                column_values = number_data['data']['items'][0][
                    'column_values']
                for column in column_values:
                    if 'number' in column:
                        number_value = column['number']
                        break
            except (KeyError, IndexError):
                number_value = ""
                print("number value is:", number_value)